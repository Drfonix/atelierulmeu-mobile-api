{
    "openapi": "3.0.0",
    "info": {
        "title": "VehiGo API docs",
        "description": "This is an API documentation, generated by L5 Swagger",
        "contact": {
            "email": "office@atelierulmeu.ro"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "/api/v1"
        }
    ],
    "paths": {
        "/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Get user appointment by id",
                "description": "Returns the appointment detailed data",
                "operationId": "4cfe493dde0727e41de395f2d21b9106",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of appointment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment response by id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Update the current appointment",
                "description": "Updates the user appointment by id",
                "operationId": "8c6358dbab3ae54e77f37ead230f4e47",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of appointment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Appointment fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppointmentRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated appointment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Delete the user appointment",
                "description": "Deletes the user appointment by id",
                "operationId": "48eb5ba3bb8944379a7495a4afdc2f99",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of appointment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete appointment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAppointmentRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/appointments": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Get user appointments",
                "description": "Returns the user related appointments",
                "operationId": "92f9b8f5539b3b39586ec5e7c35dc4f0",
                "responses": {
                    "200": {
                        "description": "The user appointments response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAppointmentRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Create new user appointment",
                "description": "Creates a new user related appointment",
                "operationId": "9e33f5fe6b2d66b087badad964a0cdf3",
                "requestBody": {
                    "description": "Appointment fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppointmentRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register or log in",
                "description": "Register or log in by users phone number",
                "operationId": "e66f8a7452e13b03ae4e77dbb42e435c",
                "requestBody": {
                    "description": "Pass phone number",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The code was sent!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out",
                "description": "Log out user from app. Delete the acces token.",
                "operationId": "1e357eb2c93a1bdabebcebfa088332bf",
                "responses": {
                    "200": {
                        "description": "Successfully logged out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/validate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Validate code",
                "description": "Validate the code sent to the users phone number.",
                "operationId": "78378eb3ff4219745b03d0563e9659a4",
                "requestBody": {
                    "description": "Pass the code, phone number and code type.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "the user data and acces token.(Bearer)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh-token": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "description": "Delete the current user token and returns the new one",
                "operationId": "d5eee1fc446104f5de5027a4337f398d",
                "responses": {
                    "200": {
                        "description": "The user data and acces token.(Bearer)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/change/validate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Validate the new phone number.",
                "description": "Validates the new user phone number with code sent to phone.",
                "operationId": "e743d3c69f1d15af8461f47f6af64dcc",
                "requestBody": {
                    "description": "Sends the code, phone number and code type for validation.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneChangeValidateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns updated user data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/user/change": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change user phone number.",
                "description": "Requests a code for change to the new number.",
                "operationId": "1caba7fff4feff7ef26230e07df8f938",
                "requestBody": {
                    "description": "Pass the old and new phone number for validation.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneChangeBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the success message + code type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserChangeResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/cars/{id}": {
            "get": {
                "tags": [
                    "Car"
                ],
                "summary": "Get user car by id",
                "description": "Returns the car detailed data",
                "operationId": "e8cc4357610811cddead04829ec723f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car response by car id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Car"
                ],
                "summary": "Update the current car",
                "description": "Updates the user car by id",
                "operationId": "81779f5cda2fd8b16e677b7584ae243e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Car fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated car response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Car"
                ],
                "summary": "Delete the user car",
                "description": "Deletes the user car by id",
                "operationId": "2358187c3e9f97486628f50543ec541a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete car response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteCarResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/cars": {
            "get": {
                "tags": [
                    "Car"
                ],
                "summary": "Get user cars",
                "description": "Returns the user related cars",
                "operationId": "4abf8c869538cb6e4644537ba31a6aad",
                "responses": {
                    "200": {
                        "description": "The user cars response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCarsResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Car"
                ],
                "summary": "Create new user car",
                "description": "Creates a new user related car",
                "operationId": "eefaab256ebfc761559e49bda6467817",
                "requestBody": {
                    "description": "Car fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car response by car id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/information": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get constant informations",
                "description": "Returns a set of data to user in app",
                "operationId": "6624f47205532cd2b6302ce83ee9e29b",
                "responses": {
                    "200": {
                        "description": "Returns the constants informations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralInfoResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/notifications/{id}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get user notification by id",
                "description": "Returns the notification detailed data",
                "operationId": "9cd1492cfb2e03e7ca29dc21ebbce9f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of notification",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification response by notification id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Update the current notification",
                "description": "Updates the user notification by id",
                "operationId": "151388cc957a8aa19bc3aba10b7fe9ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of notification",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Notification fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated notification response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notification"
                ],
                "summary": "Delete the user notification",
                "description": "Deletes the user notification by id",
                "operationId": "c45b0ae13c892255f8acb67fb481ac8f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of notification",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete notification response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteNotificationResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get user notifications",
                "description": "Returns the user related notifications",
                "operationId": "4c4c62ede38b4d58cdad5ae89a516a8a",
                "responses": {
                    "200": {
                        "description": "The user notifications response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotificationsResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Create new user notification",
                "description": "Creates a new user related notification",
                "operationId": "dfe9686351c9782afdd01984f1e4ad15",
                "requestBody": {
                    "description": "Notification fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user data",
                "description": "Returns the current user data.",
                "operationId": "d8dabdeba82df94aeebbc9bb35076a1f",
                "responses": {
                    "200": {
                        "description": "The current user data response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user data",
                "description": "Returns the updated user data.",
                "operationId": "18519f226287bd2712bc626fbb2d1880",
                "requestBody": {
                    "description": "User fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated user data response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user data",
                "description": "Returns a success meassge from delete user process..",
                "operationId": "d2c6d1447ce53e08364450f3f8d7d651",
                "responses": {
                    "200": {
                        "description": "The updated user data response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteUserResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/images": {
            "get": {
                "tags": [
                    "UserImage"
                ],
                "summary": "Get user images",
                "description": "Returns the user images models",
                "operationId": "9ae54cba70b5edcd45d126cca7ecedd5",
                "responses": {
                    "200": {
                        "description": "The user images model response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserImagesResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserImage"
                ],
                "summary": "Upload new user image",
                "description": "Creates a new user image",
                "operationId": "95dcce41710c39ca2ee94dc7a152b5a0",
                "requestBody": {
                    "description": "User image fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserImageBodyUpload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User image model response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserImageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        },
        "/images/{id}": {
            "get": {
                "tags": [
                    "UserImage"
                ],
                "summary": "Get user image by id",
                "description": "Returns the user image. inline/stream",
                "operationId": "5898b0bbe2f8c821c7244e5a4f130905",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of user image",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The image file response"
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserImage"
                ],
                "summary": "Update the user image",
                "description": "Update the user image model. (not the file)",
                "operationId": "9e67f0cc897bc731e906bb75815a896b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of user image",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User image fillable properties",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserImageBodyEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User image model response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserImageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserImage"
                ],
                "summary": "Delete user image by id",
                "description": "Delete the user image model and file",
                "operationId": "2e120d717538f7e9026e074bc53f54d0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of user image",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user image deleted successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteUserImageResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_Auth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AppointmentRequestBody": {
                "required": [
                    "car_plate_number",
                    "client_name",
                    "phone",
                    "service_data"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "For tyre change"
                    },
                    "status": {
                        "type": "string",
                        "example": "new"
                    },
                    "car_plate_number": {
                        "type": "string",
                        "example": "BV 01 ABC"
                    },
                    "client_name": {
                        "type": "string",
                        "example": "Jhon Doe"
                    },
                    "car_make_model": {
                        "type": "string",
                        "example": "BMW 320D E46"
                    },
                    "phone": {
                        "type": "string",
                        "example": "0740123456"
                    },
                    "from": {
                        "type": "string",
                        "example": "2023-07-25 10:00"
                    },
                    "to": {
                        "type": "string",
                        "example": "2023-07-25 18:00"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double",
                        "example": "6.5"
                    },
                    "requested_services": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "Tyre change",
                            "Oil change"
                        ]
                    },
                    "meta_data": {
                        "type": "object",
                        "example": {
                            "serviceStatus": "accepted"
                        }
                    },
                    "service_data": {
                        "type": "object",
                        "example": {
                            "user": {
                                "name": "Jhon"
                            },
                            "service": {
                                "name": "Demo Tyre Service"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "AppointmentRequestResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "$ref": "#/components/schemas/AppointmentRequest"
                    }
                },
                "type": "object"
            },
            "DeleteAppointmentRequestResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "UserAppointmentRequestResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppointmentRequest"
                        }
                    }
                },
                "type": "object"
            },
            "RegisterBody": {
                "required": [
                    "phone"
                ],
                "properties": {
                    "phone": {
                        "type": "string",
                        "example": "0741234567"
                    }
                },
                "type": "object"
            },
            "ValidateBody": {
                "required": [
                    "phone",
                    "code",
                    "type"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "glYyo"
                    },
                    "phone": {
                        "type": "string",
                        "example": "0741234567"
                    },
                    "type": {
                        "type": "string",
                        "example": "registration"
                    }
                },
                "type": "object"
            },
            "PhoneChangeBody": {
                "required": [
                    "old_phone",
                    "new_phone"
                ],
                "properties": {
                    "old_phone": {
                        "type": "string",
                        "example": "0741600285"
                    },
                    "new_phone": {
                        "type": "string",
                        "example": "0748931362"
                    }
                },
                "type": "object"
            },
            "PhoneChangeValidateBody": {
                "required": [
                    "phone",
                    "code",
                    "type"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "rHYzV"
                    },
                    "phone": {
                        "type": "string",
                        "example": "0741200358"
                    },
                    "type": {
                        "type": "string",
                        "example": "change"
                    }
                },
                "type": "object"
            },
            "RegisterResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": "Code sent successfully."
                    },
                    "data": {
                        "properties": {
                            "code_type": {
                                "type": "string",
                                "example": "registration"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserChangeResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": "Code sent successfully."
                    },
                    "data": {
                        "properties": {
                            "code_type": {
                                "type": "string",
                                "example": "change"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ValidateResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": "Code sent successfully."
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "access_token": {
                                "type": "string",
                                "example": "1|QU2sClAvTlQ1n1IFDyRsBV4pBvbd4utpy3Il59qK"
                            },
                            "token_type": {
                                "type": "string",
                                "example": "bearer"
                            },
                            "expires_in": {
                                "type": "integer",
                                "example": "1679836683"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LogoutResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "CarBody": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "My Car"
                    },
                    "category": {
                        "type": "string",
                        "example": "Autoturism/Automobil mixt"
                    },
                    "subcategory": {
                        "type": "string",
                        "example": "Autoturism"
                    },
                    "registration_type": {
                        "type": "string",
                        "example": "Inmatriculat"
                    },
                    "fuel_type": {
                        "type": "string",
                        "example": "Motorina"
                    },
                    "vin_number": {
                        "type": "string",
                        "example": "WBAAP71111GL33030"
                    },
                    "make": {
                        "type": "string",
                        "example": "BMW"
                    },
                    "model": {
                        "type": "string",
                        "example": "Seria 3"
                    },
                    "manufacture_year": {
                        "type": "string",
                        "example": "2002"
                    },
                    "tyre_size": {
                        "type": "json",
                        "example": []
                    },
                    "motor_power": {
                        "type": "string",
                        "example": "110"
                    },
                    "cylinder_capacity": {
                        "type": "string",
                        "example": "1995"
                    },
                    "number_places": {
                        "type": "string",
                        "example": "5"
                    },
                    "max_per_mass": {
                        "type": "string",
                        "example": "1550"
                    },
                    "civ_number": {
                        "type": "string",
                        "example": "K884163"
                    },
                    "description": {
                        "type": "string",
                        "example": "My favorite car"
                    },
                    "favorite": {
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "CarResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "$ref": "#/components/schemas/Car"
                    }
                },
                "type": "object"
            },
            "DeleteCarResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "UserCarsResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Car"
                        }
                    }
                },
                "type": "object"
            },
            "GeneralInfoResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": "Constants information"
                    },
                    "data": {
                        "properties": {
                            "car_categories": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "Autoturism",
                                    "Autotractor"
                                ]
                            },
                            "car_sub_categories": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "Automobil mixt",
                                    "SUV"
                                ]
                            },
                            "car_registration_types": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "Inmatriculat",
                                    "Inregistrat"
                                ]
                            },
                            "car_fuel_types": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "Benzina",
                                    "Motorina"
                                ]
                            },
                            "car_makes": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "Audi",
                                    "BMW"
                                ]
                            },
                            "car_models": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "A6",
                                    "Seria 3"
                                ]
                            },
                            "notification_types": {
                                "type": "array",
                                "items": {},
                                "example": [
                                    "ITP",
                                    "RCA"
                                ]
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "NotificationResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "$ref": "#/components/schemas/Notification"
                    }
                },
                "type": "object"
            },
            "DeleteNotificationResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserNotificationsResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    }
                },
                "type": "object"
            },
            "NotificationBody": {
                "required": [
                    "car_id",
                    "type",
                    "title",
                    "alert_date"
                ],
                "properties": {
                    "car_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "ITP"
                    },
                    "title": {
                        "type": "string",
                        "example": "Audi ITP"
                    },
                    "message": {
                        "type": "string",
                        "example": "My message"
                    },
                    "alert_date": {
                        "type": "string",
                        "example": "2023-06-05 10:00:00"
                    },
                    "expiration_date": {
                        "type": "string",
                        "example": "2023-06-06 10:00:00"
                    },
                    "meta_data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateUserBody": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "George"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Tepes"
                    },
                    "username": {
                        "type": "string",
                        "example": "g_tepes"
                    },
                    "email": {
                        "type": "string",
                        "example": "tepes@vlad.ro"
                    }
                },
                "type": "object"
            },
            "DeleteUserResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "UserImageBodyUpload": {
                "required": [
                    "image"
                ],
                "properties": {
                    "image": {
                        "description": "Multipart form data file",
                        "type": "string",
                        "format": "binary"
                    },
                    "car_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "favourite": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "visible_name": {
                        "type": "string",
                        "example": "custom name sdfsdf"
                    },
                    "meta_data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "UserImageBodyEdit": {
                "properties": {
                    "car_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "favourite": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "visible_name": {
                        "type": "string",
                        "example": "custom name sdfsdf"
                    },
                    "meta_data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "UserImagesResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserImage"
                        }
                    }
                },
                "type": "object"
            },
            "UserImageResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "$ref": "#/components/schemas/UserImage"
                    }
                },
                "type": "object"
            },
            "DeleteUserImageResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "AppointmentRequest": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "title": {
                        "type": "string",
                        "example": "For tyre change"
                    },
                    "status": {
                        "type": "string",
                        "example": "new"
                    },
                    "car_plate_number": {
                        "type": "string",
                        "example": "BV 01 ABC"
                    },
                    "client_name": {
                        "type": "string",
                        "example": "Jhon Doe"
                    },
                    "car_make_model": {
                        "type": "string",
                        "example": "BMW 320D E46"
                    },
                    "phone": {
                        "type": "string",
                        "example": "0740123456"
                    },
                    "from": {
                        "type": "string",
                        "example": "2023-07-25 10:00"
                    },
                    "to": {
                        "type": "string",
                        "example": "2023-07-25 18:00"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double",
                        "example": "6.5"
                    },
                    "requested_services": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "Tyre change",
                            "Oil change"
                        ]
                    },
                    "meta_data": {
                        "type": "object",
                        "example": {
                            "serviceStatus": "accepted"
                        }
                    },
                    "service_data": {
                        "type": "object",
                        "example": {
                            "user": {
                                "name": "Jhon"
                            },
                            "service": {
                                "name": "Demo Tyre Service"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "Car": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "My Car"
                    },
                    "category": {
                        "type": "string",
                        "example": "Autoturism/Automobil mixt"
                    },
                    "subcategory": {
                        "type": "string",
                        "example": "Autoturism"
                    },
                    "registration_type": {
                        "type": "string",
                        "example": "Inmatriculat"
                    },
                    "fuel_type": {
                        "type": "string",
                        "example": "Motorina"
                    },
                    "vin_number": {
                        "type": "string",
                        "example": "WBAAP71111GL33030"
                    },
                    "make": {
                        "type": "string",
                        "example": "BMW"
                    },
                    "model": {
                        "type": "string",
                        "example": "Seria 3"
                    },
                    "manufacture_year": {
                        "type": "string",
                        "example": "2002"
                    },
                    "tyre_size": {
                        "type": "json",
                        "example": []
                    },
                    "motor_power": {
                        "type": "string",
                        "example": "110"
                    },
                    "cylinder_capacity": {
                        "type": "string",
                        "example": "1995"
                    },
                    "number_places": {
                        "type": "string",
                        "example": "5"
                    },
                    "max_per_mass": {
                        "type": "string",
                        "example": "1550"
                    },
                    "civ_number": {
                        "type": "string",
                        "example": "K884163"
                    },
                    "description": {
                        "type": "string",
                        "example": "My favorite car"
                    },
                    "favorite": {
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "ITP"
                    },
                    "title": {
                        "type": "string",
                        "example": "Audi ITP"
                    },
                    "message": {
                        "type": "string",
                        "example": "My message"
                    },
                    "alert_date": {
                        "type": "string",
                        "example": "2023-06-05 10:00:00"
                    },
                    "expiration_date": {
                        "type": "string",
                        "example": "2023-06-06 10:00:00"
                    },
                    "meta_data": {
                        "type": "object",
                        "example": []
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "phone": {
                        "type": "string",
                        "example": "0741236587"
                    },
                    "uuid": {
                        "type": "string",
                        "example": "9e4cdbc3-83ee-4f5f-820a-4791a1c804fa"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "George"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Puscas"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@email.com"
                    }
                },
                "type": "object"
            },
            "UserImage": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "name": {
                        "type": "string",
                        "example": "myfirstpicture"
                    },
                    "visible_name": {
                        "type": "string",
                        "example": "custom name sdfsdf"
                    },
                    "type": {
                        "type": "string",
                        "example": "jpg"
                    },
                    "size": {
                        "type": "integer",
                        "example": "2048"
                    },
                    "h_size": {
                        "type": "string",
                        "example": "1 MB"
                    },
                    "favorite": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "meta_data": {
                        "type": "json",
                        "example": []
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_Auth": {
                "type": "apiKey",
                "description": "A short description for security scheme",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}